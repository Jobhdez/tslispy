"use strict";
// Generated from Scheme.g4 by ANTLR 4.9.0-SNAPSHOT
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemeLexer = void 0;
const ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
const Lexer_1 = require("antlr4ts/Lexer");
const LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
const VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
const Utils = require("antlr4ts/misc/Utils");
class SchemeLexer extends Lexer_1.Lexer {
    // @Override
    // @NotNull
    get vocabulary() {
        return SchemeLexer.VOCABULARY;
    }
    // tslint:enable:no-trailing-whitespace
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator_1.LexerATNSimulator(SchemeLexer._ATN, this);
    }
    // @Override
    get grammarFileName() { return "Scheme.g4"; }
    // @Override
    get ruleNames() { return SchemeLexer.ruleNames; }
    // @Override
    get serializedATN() { return SchemeLexer._serializedATN; }
    // @Override
    get channelNames() { return SchemeLexer.channelNames; }
    // @Override
    get modeNames() { return SchemeLexer.modeNames; }
    static get _ATN() {
        if (!SchemeLexer.__ATN) {
            SchemeLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(SchemeLexer._serializedATN));
        }
        return SchemeLexer.__ATN;
    }
}
exports.SchemeLexer = SchemeLexer;
SchemeLexer.T__0 = 1;
SchemeLexer.T__1 = 2;
SchemeLexer.T__2 = 3;
SchemeLexer.T__3 = 4;
SchemeLexer.T__4 = 5;
SchemeLexer.T__5 = 6;
SchemeLexer.T__6 = 7;
SchemeLexer.T__7 = 8;
SchemeLexer.T__8 = 9;
SchemeLexer.T__9 = 10;
SchemeLexer.T__10 = 11;
SchemeLexer.T__11 = 12;
SchemeLexer.T__12 = 13;
SchemeLexer.T__13 = 14;
SchemeLexer.T__14 = 15;
SchemeLexer.T__15 = 16;
SchemeLexer.T__16 = 17;
SchemeLexer.T__17 = 18;
SchemeLexer.T__18 = 19;
SchemeLexer.T__19 = 20;
SchemeLexer.INT = 21;
SchemeLexer.VAR = 22;
SchemeLexer.WS = 23;
// tslint:disable:no-trailing-whitespace
SchemeLexer.channelNames = [
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
];
// tslint:disable:no-trailing-whitespace
SchemeLexer.modeNames = [
    "DEFAULT_MODE",
];
SchemeLexer.ruleNames = [
    "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
    "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
    "T__17", "T__18", "T__19", "INT", "VAR", "WS",
];
SchemeLexer._LITERAL_NAMES = [
    undefined, "'('", "'let'", "')'", "'set'", "'begin'", "'if'", "'while'",
    "'true'", "'false'", "'vectorref'", "'vector'", "'vectorlength'", "'and'",
    "'or'", "'not'", "'eq'", "'+'", "'-'", "'<'", "'>'",
];
SchemeLexer._SYMBOLIC_NAMES = [
    undefined, undefined, undefined, undefined, undefined, undefined, undefined,
    undefined, undefined, undefined, undefined, undefined, undefined, undefined,
    undefined, undefined, undefined, undefined, undefined, undefined, undefined,
    "INT", "VAR", "WS",
];
SchemeLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(SchemeLexer._LITERAL_NAMES, SchemeLexer._SYMBOLIC_NAMES, []);
SchemeLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x19\x9E\b\x01" +
    "\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
    "\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
    "\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
    "\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
    "\x17\x04\x18\t\x18\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
    "\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
    "\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03" +
    "\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
    "\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
    "\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
    "\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
    "\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11" +
    "\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15" +
    "\x03\x16\x06\x16\x8D\n\x16\r\x16\x0E\x16\x8E\x03\x17\x03\x17\x07\x17\x93" +
    "\n\x17\f\x17\x0E\x17\x96\v\x17\x03\x18\x06\x18\x99\n\x18\r\x18\x0E\x18" +
    "\x9A\x03\x18\x03\x18\x02\x02\x02\x19\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
    "\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
    "\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
    "%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19\x03\x02\x06\x03" +
    "\x022;\x05\x02C\\aac|\x06\x022;C\\aac|\x05\x02\v\f\x0F\x0F\"\"\x02\xA0" +
    "\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
    "\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
    "\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
    "\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
    "\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
    "!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
    "\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
    "\x02\x02/\x03\x02\x02\x02\x031\x03\x02\x02\x02\x053\x03\x02\x02\x02\x07" +
    "7\x03\x02\x02\x02\t9\x03\x02\x02\x02\v=\x03\x02\x02\x02\rC\x03\x02\x02" +
    "\x02\x0FF\x03\x02\x02\x02\x11L\x03\x02\x02\x02\x13Q\x03\x02\x02\x02\x15" +
    "W\x03\x02\x02\x02\x17a\x03\x02\x02\x02\x19h\x03\x02\x02\x02\x1Bu\x03\x02" +
    "\x02\x02\x1Dy\x03\x02\x02\x02\x1F|\x03\x02\x02\x02!\x80\x03\x02\x02\x02" +
    "#\x83\x03\x02\x02\x02%\x85\x03\x02\x02\x02\'\x87\x03\x02\x02\x02)\x89" +
    "\x03\x02\x02\x02+\x8C\x03\x02\x02\x02-\x90\x03\x02\x02\x02/\x98\x03\x02" +
    "\x02\x0212\x07*\x02\x022\x04\x03\x02\x02\x0234\x07n\x02\x0245\x07g\x02" +
    "\x0256\x07v\x02\x026\x06\x03\x02\x02\x0278\x07+\x02\x028\b\x03\x02\x02" +
    "\x029:\x07u\x02\x02:;\x07g\x02\x02;<\x07v\x02\x02<\n\x03\x02\x02\x02=" +
    ">\x07d\x02\x02>?\x07g\x02\x02?@\x07i\x02\x02@A\x07k\x02\x02AB\x07p\x02" +
    "\x02B\f\x03\x02\x02\x02CD\x07k\x02\x02DE\x07h\x02\x02E\x0E\x03\x02\x02" +
    "\x02FG\x07y\x02\x02GH\x07j\x02\x02HI\x07k\x02\x02IJ\x07n\x02\x02JK\x07" +
    "g\x02\x02K\x10\x03\x02\x02\x02LM\x07v\x02\x02MN\x07t\x02\x02NO\x07w\x02" +
    "\x02OP\x07g\x02\x02P\x12\x03\x02\x02\x02QR\x07h\x02\x02RS\x07c\x02\x02" +
    "ST\x07n\x02\x02TU\x07u\x02\x02UV\x07g\x02\x02V\x14\x03\x02\x02\x02WX\x07" +
    "x\x02\x02XY\x07g\x02\x02YZ\x07e\x02\x02Z[\x07v\x02\x02[\\\x07q\x02\x02" +
    "\\]\x07t\x02\x02]^\x07t\x02\x02^_\x07g\x02\x02_`\x07h\x02\x02`\x16\x03" +
    "\x02\x02\x02ab\x07x\x02\x02bc\x07g\x02\x02cd\x07e\x02\x02de\x07v\x02\x02" +
    "ef\x07q\x02\x02fg\x07t\x02\x02g\x18\x03\x02\x02\x02hi\x07x\x02\x02ij\x07" +
    "g\x02\x02jk\x07e\x02\x02kl\x07v\x02\x02lm\x07q\x02\x02mn\x07t\x02\x02" +
    "no\x07n\x02\x02op\x07g\x02\x02pq\x07p\x02\x02qr\x07i\x02\x02rs\x07v\x02" +
    "\x02st\x07j\x02\x02t\x1A\x03\x02\x02\x02uv\x07c\x02\x02vw\x07p\x02\x02" +
    "wx\x07f\x02\x02x\x1C\x03\x02\x02\x02yz\x07q\x02\x02z{\x07t\x02\x02{\x1E" +
    "\x03\x02\x02\x02|}\x07p\x02\x02}~\x07q\x02\x02~\x7F\x07v\x02\x02\x7F " +
    "\x03\x02\x02\x02\x80\x81\x07g\x02\x02\x81\x82\x07s\x02\x02\x82\"\x03\x02" +
    "\x02\x02\x83\x84\x07-\x02\x02\x84$\x03\x02\x02\x02\x85\x86\x07/\x02\x02" +
    "\x86&\x03\x02\x02\x02\x87\x88\x07>\x02\x02\x88(\x03\x02\x02\x02\x89\x8A" +
    "\x07@\x02\x02\x8A*\x03\x02\x02\x02\x8B\x8D\t\x02\x02\x02\x8C\x8B\x03\x02" +
    "\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8C\x03\x02\x02\x02\x8E\x8F\x03\x02" +
    "\x02\x02\x8F,\x03\x02\x02\x02\x90\x94\t\x03\x02\x02\x91\x93\t\x04\x02" +
    "\x02\x92\x91\x03\x02\x02\x02\x93\x96\x03\x02\x02\x02\x94\x92\x03\x02\x02" +
    "\x02\x94\x95\x03\x02\x02\x02\x95.\x03\x02\x02\x02\x96\x94\x03\x02\x02" +
    "\x02\x97\x99\t\x05\x02\x02\x98\x97\x03\x02\x02\x02\x99\x9A\x03\x02\x02" +
    "\x02\x9A\x98\x03\x02\x02\x02\x9A\x9B\x03\x02\x02\x02\x9B\x9C\x03\x02\x02" +
    "\x02\x9C\x9D\b\x18\x02\x02\x9D0\x03\x02\x02\x02\x06\x02\x8E\x94\x9A\x03" +
    "\b\x02\x02";
